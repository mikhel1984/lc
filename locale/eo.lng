---------- locale/eo.lng ----------
{
language =	 'Esperanto',
authors = [[Stanislav Mikhel]],
---------- dialog ----------
Dialog = {
["modules"]              = [[Disponeblaj moduloj:]],
["done"]                 = [[Preta.]],
["intro"]                = [[Entru 'import(modulo)' por piliigi la funcionalidad.
Entru 'help([funkcio])' por akiri helpon.
Entru 'quit()' por eliri.
]],
["use_import"]           = [[Usu
  import 'modulo' ['modulo2' 'modulo3' ...]
por akiri ekstran moduloj.]],
["alias"]                = [[Usu la alias '%s' aliri la modulo '%s'.]],
},
---------- main.lua ----------
Main = {
["__main__"]             = [[Komputado sistemo bazita sur Lua.]],
["sqrt(a)"]              = [[Kvadrata radiko.]],
["sin(x)"]               = [[La sinuso de nombro x.]],
["example(name)"]        = [[Montri ekzamploj por la modulo.]],
["ceil(x)"]              = [[Redonas la plej malgranda entjeron pli granda aǔ egala al x.]],
["max(...)"]             = [[La pley granda nombro.]],
["round(x)"]             = [[Rondi al la plej proksima entjero.]],
["_pi"]                  = [[Nombro pi.]],
["tan(x)"]               = [[La tangento de nombro x.]],
["atan(y[,x])"]          = [[Tangentarco de nombro y. En kazo de 2 parametroj kalkuli y/x kun signoj.]],
["lg(x)"]                = [[La logaritmo bazo 10.]],
["flip(t[,N])"]          = [[Presi Lua tablo en uzanta formato. Demandi pri daǔrigo post ĉiu N elementoj (defaǔlta estas 10).]],
["ath(x)"]               = [[Hiperbola tangentarco.]],
["floor(x)"]             = [[Redonas la plej granda entjeron pli malgranda aǔ egala al x.]],
["ln(x)"]                = [[Natura logaritmo.]],
["ch(x)"]                = [[Hiperbola kosinuso.]],
["cos(x)"]               = [[La kosinuso de nombro x.]],
["deserialize(obj_str)"] = [[Transformi la serialiga linio in la Sonata LC objekto.]],
["ach(x)"]               = [[Hiperbola sinusarko.]],
["pow(a,b)"]             = [[Redoni a^b.]],
["sh(x)"]                = [[Hiperbola sinuso.]],
["_e"]                   = [[Eǔlera nombro.]],
["exp(x)"]               = [[La exponenta dependeco.]],
["asin(x)"]              = [[La sinusarko de nombro x.]],
--["import"]               = [[]],
["lctype(t)"]            = [[Montri objektan tipon.]],
["deg(x)"]               = [[Radianoj al gradoj.]],
["min(...)"]             = [[La plej malgranda nombro.]],
["acos(x)"]              = [[La kosinusarko de nombro x.]],
["rand()"]               = [[Hazarda nombro inter 0 kaj 1.]],
["ash(x)"]               = [[La inversa hiperbola sinuso.]],
["rad(x)"]               = [[Gradoj al radianoj.]],
["th(x)"]                = [[Hiperbola tangento.]],
["abs(x)"]               = [[La absoluta valoro.]],
},
---------- rational.lua ----------
Rat = {
["__main__"]             = [[Komputadoj kun la raciaj nombroj.]],
["De(v)"]                = [[Denominatoro de racia nombro.]],
["Rat(m[,n])"]           = [[Krei novan racian nombron. m - numeratoro, n - denominatoro.]],
["serialize(obj)"]       = [[Teksta representa de la racia nombro objecto.]],
["Nu(v)"]                = [[Numeratoro de racia nombro.]],
--["comparison"]           = [[a<b, a<=b, a>b, a>=b, a==b, a~=b ]],
["decimal(v)"]           = [[Revenas racia nombro en dekuma formo.]],
["copy(v)"]              = [[Kreu kopion de la racia nombro.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, -a, a^b} ]],
["gcd(a,b)"]             = [[Plej granda komuna divizoro.]],
},
---------- gnuplot.lua ----------
Gnu = {
["__main__"]             = [[Interfaco por laborado kun Gnuplot de Lua.]],
["isavailable(g)"]       = [[Kontrolu plenumon kaj antaǔdifinitaj opcioj.]],
["plot(g)"]              = [[Konstrui funkcian grafeon. Parametroj estas specifita en Lua table g.]],
["copy(g)"]              = [[Krei kopion la parametroj de grafeo.]],
["N"]                    = [[Nombro da punktoj sur la grafikaĵo se la parametro 'samples' ne estas specifita.]],
["Gnu([g])"]             = [[Konverti Lua tablon al 'gnuplot' objekto.]],
["keys"]                 = [[  Priskribo de parametroj:
{'sin(x)'}                                   -- konstrui grafeon por sinuso
{math.sin, title='sinus'}                    -- grafeon por Lua funkcio, aldoni priskribon
{file='sin.dat', ln=1, lw=2}                 -- grafeon por datumndosieron, specifi koloron kaj dikecon
{tbl, with='lines'}                          -- grafeon por Lua tabulo, uzi linioj
title='Graph name'                           -- apudskribo
xrange={0,10}                                -- gamo x de 0 ĝis 10
yrange={-2,2}                                -- gamo y
zrange={0,5}                                 -- gamo z
trange={1,2}                                 -- gamo por parametria funkcio
xtitle='A', ytitle='B'                       -- aksaj nomoj
terminal='jpeg'                              -- savi la rezulton kiel jpeg bildon
output='my_plot.jpg'                         -- dosiernomo
parametric=true                              -- parametria grafeo
size='square'                                -- kvadrata bildo
polar=true                                   -- uzi polusa grafeo
grid='polar'                                 -- polusa koordinata sistemo
legend=false                                 -- malebligi priskribon
surface=true                                 -- tridimensia grafeo
samples=200                                  -- nombro da punktoj
permanent=true                               -- sendependa grafeo
raw='set pm3d'                               -- fiksi la Gnuplot parametrojn permane 
]],
},
---------- units.lua ----------
Unit = {
["__main__"]             = [[Operacioj kun unuoj de mezuroj.]],
["prefix"]               = [[Prefikso tablo.]],
["serialize(obj)"]       = [[Teksta representa de la objecto.]],
["convert(v, units)"]    = [[Konvertas unuojn de mezuro, redonas novan objector aǔ nil. 'units' povas esti teksto aǔ funkcio. 
Operacio v['units'] redonas nur la nombro.]],
["Unit(v[,u])"]          = [[Krei novan valoron kun unuoj de mezuro.]],
["add(unit,rule)"]       = [[Aldoni regulon por konverti unuojn de mezuro.]],
["copy(u)"]              = [[Krei kopion de objecto.]],
},
---------- special.lua ----------
Spec = {
["__main__"]             = [[Specialaj matematikaj funkcioj.]],
["gamma(z)"]             = [[Gama-funkcio.]],
["bessy(n,x)"]           = [[Bessel-funkcio de la dua speco.]],
["gammq(a,x)"]           = [[Nekompleta gama-funkcio Q(a,x) = 1-P(a,x).]],
["legendre(n,x)"]        = [[Listo de la Legendre polinomoj koeficientoj.]],
["gammp(a,x)"]           = [[Nekompleta gama-funkcio P(a,x).]],
["erfc(x)"]              = [[Kompletiga eraro funkcio.]],
["gammainc(x,a,type)"]   = [[Nekompleta gama-funkcio, P (type='lower') aǔ Q (type='upper').]],
["dawson(x)"]            = [[Dawson integralo.]],
["betainc(x,a,b)"]       = [[Nekompleta beta-funkcio Ix(a,b).]],
["gammaln(z)"]           = [[Naturala logaritmo de la gama-funkcio.]],
["bessi(n,x)"]           = [[Modifita Bessel-funkcio In(x).]],
["bessk(n,x)"]           = [[Modifita Bessel-funkcio Kn(x).]],
["betaln(z,w)"]          = [[Naturala logaritmo de la beta-funkcio.]],
["erf(x)"]               = [[Eraro funkcio.]],
["bessj(n,x)"]           = [[Bessel-funkcio de la unua speco.]],
["expint(n,x)"]          = [[Eksponenta integralo En(x).]],
["beta(z,w)"]            = [[Beta-funkcio.]],
},
---------- complex.lua ----------
Comp = {
["__main__"]             = [[Operacioj kun la kompleksaj nombroj.]],
["Re(v)"]                = [[La reela parto.]],
["_i"]                   = [[Kompleksa unuo.]],
["conj(v)"]              = [[Kompleksa konjugata nombro.]],
["serialize(obj)"]       = [[Teksta reprezento de la kompleksa nombro objecto.]],
--["comparison"]           = [[a==b, a~=b]],
["arg(v)"]               = [[Revenas la argumenton de kompleksa nombro.]],
["trig(module,angle)"]   = [[Uzi geometria prezento por kompleksa nombro.]],
["sqrt(v)"]              = [[Kvadrata radiko. Rezulto povas esti vera aǔ imaginara nombro.]],
["abs(v)"]               = [[Redonas la modulo de kompleksa nombro.]],
["Im(v)"]                = [[La imaginara parto.]],
["Comp(a[,b])"]          = [[Krei novan kompleksan nombron.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a^b, -a]],
["copy(c)"]              = [[Krei kopion de complexa nombro.]],
},
---------- set.lua ----------
Set = {
["__main__"]             = [[Manipuladoj kun la aroj.]],
["map(s,fn)"]            = [[Apliki la funkcion fn() al la aro elemento.]],
["remove(set,val)"]      = [[Forigi elementon.]],
["Set(t)"]               = [[Krei novan aron el listo (tablo) de elementoj.]],
["copy(s)"]              = [[Krei kopion de aro.]],
["table(set)"]           = [[Prezenti aron en la formo de tablo.]],
["insert(set,val)"]      = [[Aldoni elementon.]],
["check(set,val)"]       = [[Kontrolu, ke la elemento apartenas al la aro.]],
["serialize(obj)"]       = [[Teksta representa de la aro objecto.]],
--["union, intersection, difference"] = [[a+b, a*b, a/b]],
--["comparison"]           = [[a==b, a~=b, a<b, a<=b, a>b, a>=b]],
},
---------- struct.lua ----------
DS = {
["__main__"]             = [[Bazaj datumoj strukturoj.]],
["peek()"]               = [[Revenas supran valoron sen forigi ĝin.]],
["pop()"]                = [[Revenas sekvantan valoron de la stako aǔ 'nil'.]],
["isempty()"]            = [[Revenas 'true' se la objecto estas malplena.]],
["add(val)"]             = [[Aldoni valoron al la vosto.]],
["push(val)"]            = [[Aldoni valoron al la stako, krom 'nil'.]],
["insert(v)"]            = [[Aldoni elementon al la amaso.]],
["deltop()"]             = [[Akiri supran elementon. Por defaǔlta funkcio "less()" supro estas maksimumo.]],
["remlast()"]            = [[Akiri lastan valoron de la vosto]],
["addfirst(val)"]        = [[Aldoni valoron al la supro de la vosto.]],
["Heap([less])"]         = [[Krei novan amason. Komparao metodo 'less()' povas esti antaǔdecidita.]],
["copy()"]               = [[Reveni kopion de la objecto.]],
["rem()"]                = [[Akiri valoron de la vosto.]],
["Stack()"]              = [[Krei novan stakon.]],
["Queue()"]              = [[Krei novan voston.]],
},
---------- array.lua ----------
Arr = {
["__main__"]             = [[Manipuladoj kun la tabelo de elementoj.]],
["dim(arr)"]             = [[Redonas dimension de la tabelo.]],
["get(arr,ind)"]         = [[Redonai elementon de tabelo. Indico estas tablo.]],
["rand(size)"]           = [[Redonas tabulon de hazarda nombroj inter 0 kaj 1.]],
["serialize(obj)"]       = [[Teksta reprezento de interna strukturo de la tabelo objecto.]],
["map(a,fn)"]            = [[Aplikas funkcion al la tabelo. Redonas novan tabelon.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, -a, a^b]],
["Arr(size)"]            = [[Krei malplenan tabelon. Dimensio estas tablo.]],
["isequal(a1,a2)"]       = [[Kontroli egalecon de dimensioj.]],
["concat(a1,a2,axe)"]    = [[Kombini tabeloj laǔ donita akso.]],
["copy(arr)"]            = [[Kreu kopion de la tabelo.]],
["next(arr)"]            = [[Revenas funkcion por preterpasi ĉiujn indicojn kaj valorojn.]],
["set(arr,ind,val)"]     = [[Aldonu valoro al la tabelo. Indico estas tablo.]],
["fullstring(arr,r,c)"]  = [[Redonas tabelo kiel sekvenco de matricoj. r kaj c estas aksoj.]],
["apply(a1,a2,fn)"]      = [[Aplikas funkcion al la valoroj de du tabeloj. Redonas novan tabelon.]],
--["comparison"]           = [[a == b, a ~= b]],
["sub(arr,ind1,ind2)"]   = [[Redonas la parton de tabelo limigita de 2 indicoj.]],
},
---------- bigint.lua ----------
Big = {
["__main__"]             = [[Operacioj kun la arbitraj longaj entjeroj.]],
["tonumber(v)"]          = [[Prezenti grandan entjeron en nombra formo se eble.]],
["serialize(obj)"]       = [[Teksta representa de la granda entjero objecto.]],
["copy(v)"]              = [[Krei kopion de granda entjero.]],
["str(v)"]               = [[Pli konvena reprezento de la granda entjero.]],
--["comparison"]           = [[a<b, a<=b, a>b, a>=b, a==b, a~=b]],
["fact(n)"]              = [[Revenas faktorialon de la ne indika entjera nombro n.]],
["BASE"]                 = [[Bazo de la nombro sistemo.]],
["eq(a,b)"]              = [[Egaleco kontrolo.]],
["abs(v)"]               = [[Absoluta valoro.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a%b, a^b, -a, #a]],
["Big(v)"]               = [[Krei novan arbitra longa entjero bazitan sur la nombro aǔ teksto.]],
},
---------- numeric.lua ----------
Num = {
["__main__"]             = [[Grupo de funkcioj por la numeraj kalkuloj.]],
["trapez(fn,a,b)"]       = [[Kalkuli la integralo uzante la metodon de trapezoj.]],
["TOL"]                  = [[Precizeco de kalkuloj (0.001 defaǔlte).]],
["solve(fn,a,b)"]        = [[Trovu la radiko de ekvacio fn(x)=0 en la intervalo [a,b].]],
["ode(fn,x0,y0,xn[,dx])"] = [[Nombra solvo de ODE.
Se la paŝo dx ne estas specifita, tiam ĝi estas kalkulita aǔtomate laǔ la postulata precizeco.
Redonas liston de interaj punktoj kaj rezulton yn.]],
["newton(fn,x0)"]        = [[Trovu la radiko de ekvacio uzante la metodon de Newton, x0 estas komenca proksimiĝo.]],
["diff(fn,x)"]           = [[Kalkuli derivaĵon de la funkcio.]],
},
---------- stat.lua ----------
Stat = {
["__main__"]             = [[Statistikaj kalkuloj. Datumoj devas esti reprezentita kiel tablo Lua.]],
["fpdf(x,v1,v2)"]        = [[F dissendo denseco.]],
["poisscdf(x,lam)"]      = [[Akumula distribuo-funkcio de la Poisson.]],
["tpdf(x,nu)"]           = [[Dissendo denseco de la Studento.]],
["min(t)"]               = [[La plej malgranda nombro kaj ĝia indekso.]],
["poisspdf(x,lam)"]      = [[Dissendo denseco de la Poisson.]],
["median(t)"]            = [[Meza de la listo.]],
["hyst(data[,N[,a,b]])"] = [[Kalkulas histogramon por la donitaj datumoj sur la intervalo [a,b] kun N gamoj. Revenas tabulon kun skalo (X) kaj oftecoj (Y).]],
["mean(t[,w])"]          = [[Kalkuli averaĝo. Pezoj povas esti prenita en konto.]],
["freq(t)"]              = [[Revenas tablon kun la oftecoj de elementoj.]],
["chi2cdf(x,v)"]         = [[Akumula distribuo-funkcio chi-2.]],
["normpdf(x,nu,sig)"]    = [[Normala dissendo denseco.]],
["std(t[,w])"]           = [[Norma devio kaj vario. Pezoj povas esti prenita en konto.]],
["fcdf(x,v1,v2)"]        = [[F akumula distribuo.]],
["normcdf(x,mu,sig)"]    = [[Normala akumula distribuo.]],
["max(t)"]               = [[La plej granda nombro kaj ĝia indekso.]],
["chi2pdf(x,v)"]         = [[Chi-2 dissendo denseco.]],
["cmoment(n,x[,p])"]     = [[Centra momento de x kun n ordo, p estas listo de pezoj.]],
["geomean(t[,w])"]       = [[La geometria meznombro.]],
["stdcorr(t)"]           = [[Korektita valoro de la norma devio kaj vario.]],
["tcdf(x,nu)"]           = [[Akumula distribuo-funkcio de la Studento.]],
["sum(t)"]               = [[Kalkuli sumon de ĉiuj elementoj.]],
["harmean(t[,w])"]       = [[Armona meznombro.]],
["moment(n,x[,p])"]      = [[Momento de x kun n ordo, p estas listo de pezoj.]],
},
---------- polynom.lua ----------
Poly = {
["__main__"]             = [[Operacioj kun polinomoj.]],
["fit(X,Y,ord)"]         = [[Trovi la polinoman alproksimiĝon por la kurbo.]],
["serialize(obj)"]       = [[Teksta representa de la polinomo objecto.]],
["coef(...)"]            = [[Kalkuli la polinomon per konataj radikoj.]],
--["comparison"]           = [[a<b, a<=b, a>b, a>=b, a==b, a~=b]],
["copy(p)"]              = [[Krei kopion de polinomo.]],
["int(p[,x0])"]          = [[Trovi la integralo de polinomo, x0 - libera faktoro.]],
["der(p[,x])"]           = [[Trovi la derivaĵon de polinomo, kalkuli valoro.]],
["Poly(...)"]            = [[Krei novan poinoman.]],
["val(p,x)"]             = [[Kalkulu la valoro de polinomo p je punkto x. La sama al p(x).]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a^n, -a]],
["real(p)"]              = [[Trovi la realan radikojn de polinomo.]],
},
---------- matrix.lua ----------
Mat = {
["__main__"]             = [[Operacioj kun matricoj. La matricoj estas maldensa defaǔlte.]],
["apply(m1,m2,fn)"]      = [[Apliki la funkcion fu(v1,v2) al ĉiu elemento de matricoj m1 kaj m2, redoni novan matricon.]],
["diag(M[,n])"]          = [[Ĉerpti la diagonalajn elementojn aǔ krei novan matricon kun donita diagonalo. n estas delokigo.]],
["cross(a,b)"]           = [[Vectora produkto de 3-elementaj vektoroj.]],
["det(m)"]               = [[Matrico determinanto.]],
["transpose(m)"]         = [[Redonas la transposta matrico. La sama al T(m).]],
["tr(m)"]                = [[Spuro de matrico.]],
["rank(m)"]              = [[Trovi rangon de la matrico.]],
["triang(m)"]            = [[Matrica triangulado.]],
["fill(rows,cols,fn)"]   = [[Kreu matrico uzante la funkcio fn(r,c).]],
["col(m,k)"]             = [[Redonas k vico de la matrico.]],
["ones(rows[,cols[,val]])"] = [[Kreu matricon plenigita de donita nombro (1 defaǔlte).]],
["pinv(M)"]              = [[Redonas pseǔdon-inversa matrico.]],
["get(m,row,col)"]       = [[Redoni elemento de matrico. La sama al m(row,col).]],
["dense(m)"]             = [[Redonas densa matrico.]],
["copy(m)"]              = [[Krei kopion de la matrico.]],
["set(m,row,col)(val)"]  = [[Difini valoron de la matrico elemento.]],
["rand(rows[,cols])"]    = [[Krei matricon de hazardaj nombroj inter 0 kaj 1.]],
["serialize(obj)"]       = [[Teksta representa de la matrica objecto.]],
["eye(rows[,cols])"]     = [[Krei identeca matrico.]],
--["comparison"]           = [[a==b, a~=b]],
["map_ex(m,fn)"]         = [[Apliki la funkcion fn(row,col,val) al ĉiuj elementoj, redoni novan matricon.]],
["sub(m,r1,r2,c1,c2)"]   = [[Revenu matrico konsistanta el vicoj [r1;r2] kaj kolumnoj [c1;c2].]],
["map(m,fn)"]            = [[Apliki la funkcion al ĉiuj elementoj, redoni novan matricon.]],
["concat(m1,m2,dir)"]    = [[Kunfandi 2 matricojn, dir='h' - horizontale, dir='v' - vertikale.
Uzi m1 .. m2 por horizontala kunfandado kaj m1 // m2 por verticalo.]],
["sqnorm(m,dir)"]        = [[Kalkuli kvadrata normo por donita direkto.]],
["rref(A,b)"]            = [[Gaǔsa transformo por solvado de ekvacio Ax=b. Redonas la transformita matrico kaj determinanto.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a^b, -a]],
["size(m)"]              = [[Redonas al nombro da vicoj kaj kolumnoj. La sama al #m.]],
["cholesky(m)"]          = [[Ĉoleska transformo de pozitiva simetria matrico.]],
["Mat(...)"]             = [[Krei novan matricon de la listo de vicoj (tabloj).]],
["reduce(m,fn,dir,init)"] = [[Taksi funkcion s=fn(s,x) por vicoj (dir='r') aǔ kolumnoj (dir='c'), kie s0=init.]],
["sum(m,dir)"]           = [[Kalkuli sumon de elementoj por vicoj aǔ kolumnoj ('r' aǔ 'c').]],
["dot(a,b)"]             = [[Skalara produkto de 3-elementaj vektoroj.]],
["inv(m)"]               = [[Redonas la inversa matrico.]],
["lu(m)"]                = [[LU transformo de la matrico. Redonas L,U kaj P valoroj.]],
["row(m,k)"]             = [[Redonas k kolumno de la matrico.]],
["zeros(rows[,cols])"]   = [[Krei nula matrico.]],
["sparse(m)"]            = [[Redonas malŝarĝan matricon.]],
},
---------- files.lua ----------
File = {
["__main__"]             = [[Rutinoj por labori kun datumja dosieroj.]],
["split(str,delim)"]     = [[Generas funkcion, kiu redonas partojn de la teksto apartigita per delimitilo.]],
["tblimport(fname)"]     = [[Importi Lua tabulo de la dosiero.]],
["dsvread(fname,del)"]   = [[Legas datumojn disigitaj per delimitilo en la dosiero, revenas Lua tabulon.]],
["tblexport(fname,tbl)"] = [[Savi Lua tabulon en dosiero.]],
["dsvwrite(fname,tbl,del)"] = [[Savi Lua tabulon kiel dosieron kun delimitilo disigita datumojn.]],
},
---------- const.lua ----------
_C = {
["__main__"]             = [[Iuj konstantaj valoroj.]],
["g"]                    = [[Senpaga akcelo.]],
["NA"]                   = [[Nombro de Avogadro.]],
["Vm"]                   = [[Unu mole de ideala gaso volumo.]],
["k"]                    = [[Konstanto de Boltzmann.]],
["e"]                    = [[Electrono ŝarĝo.]],
["R"]                    = [[Universaa gaso konstanto.]],
["G"]                    = [[Gravita konstanto.]],
["c"]                    = [[Rapido de lumo.]],
["mu0"]                  = [[Magneta konstanto.]],
["Adams"]                = [[La respondo pri la vivo, la universo kaj ĉio.]],
["phi"]                  = [[Ora proporcio.]],
["eps0"]                 = [[Elektra konstanto.]],
["h"]                    = [[Konstanto de Planck.]],
},
}
